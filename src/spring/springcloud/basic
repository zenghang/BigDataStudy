https://github.com/zhengjianglong915/note-of-interview
1.单体应用
    一个归档包（例如war格式）包含所有功能的应用程序，通常称为单体应用。而架构单体应用的方法
论，就是单体应用架构。
    单体应用比较好容易部署、测试，在项目的初期，单体应用可以很好地运行。然而，随着需求的不断
增加，越来越多的人加入开发团队，代码库也在飞速地膨胀。慢慢地，单体应用变得越来越臃肿，可维护
性、灵活性逐渐降低，维护成本越来越高。

1.1缺点
    复杂性高：模块非常多、模块的边界模糊，依赖关系不清楚、混乱的堆砌在一起。
    部署：每次功能的变更或缺陷的修复都导致需要重新部署整个应用，全量部署的方式耗时长，影响范围
大、风险高。
    可靠性差：某个应用bug,例如死循环、OOM等，可能会导致整个应用的崩溃。
    扩展能力受限：单体应用只能作为一个整体进行扩展，无法根据业务模块的需要进行伸缩。例如
应用中有的模块是计算密集型的，它需要强劲的CPU；有的模块则是IO密集型的，需要更大的内存。由于
这些模块部署在一起，不得不在硬件的选择上做出妥协。

2.微服务架构
    微服务架构风格是一种将单一应用程序开发为一组小型服务的方法，每个服务运行在自己的进程中
服务之间通信采用轻量级通信机制（通常用HTTP资源API）。这些服务围绕业务能力构建并且可通过全自
动部署机制独立部署。这些服务共用一个最小型的集中式的管理，服务可用不同的语言开发，使用不同
的数据存储技术。

2.1优点
    易于开发和维护：只关注特定的业务功能
    单个微服务启动较快
    局部修改容易部署
    按需伸缩：可根据需求，实现细粒度的扩展。

3.组件
















